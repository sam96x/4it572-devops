name: build and tests our eshop workflow

on:
  workflow_dispatch:
  push:

jobs:
  # Install:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Code checkout
  #       uses: actions/checkout@v2.5.0
  #       with:
  #         token: ${{ secrets.WORKLOW_TOKEN }}

  #     - name: Setup NodeJS
  #       uses: actions/setup-node@v3.5.1
  #       with:
  #         node-version: 10

  #     - name: Cache
  #       uses: actions/cache@v3.0.11
  #       with:
  #         path: node_modules
  #         key: node_modules-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: node_modules-

  #     - name: Install packages with NPM
  #       run: |
  #         npm ci
  # Build:
  #   needs: Install
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Code checkout
  #       uses: actions/checkout@v2.5.0
  #       with:
  #         token: ${{ secrets.WORKLOW_TOKEN }}

  #     - name: Setup NodeJS
  #       uses: actions/setup-node@v3.5.1
  #       with:
  #         node-version: 10

  #     - name: Cache
  #       uses: actions/cache@v3.0.11
  #       with:
  #         path: node_modules
  #         key: node_modules-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: node_modules-

  #     - name: Install packages (with NPM)
  #       run: |
  #         npm ci

  #     - name: Build
  #       run: |
  #         npm rebuild node-sass --force
  #         npm run build -- --colors

  #     - name: Cache node modules and build folder
  #       if: ${{ github.ref == 'refs/heads/master' }}
  #       uses: actions/cache@v3.0.11
  #       with:
  #         path: |
  #           ~/.npm
  #           ./node_modules
  #           ./build
  #         key: ${{ runner.os }}-build-${{ github.run_id }}
  #         restore-keys: ${{ runner.os }}-build-${{ github.run_id }}
  # Test:
  #   needs: Install
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Code checkout
  #       uses: actions/checkout@v2.5.0
  #       with:
  #         token: ${{ secrets.WORKLOW_TOKEN }}

  #     - name: Setup NodeJS
  #       uses: actions/setup-node@v3.5.1
  #       with:
  #         node-version: 10

  #     - name: Cache
  #       uses: actions/cache@v3.0.11
  #       with:
  #         path: node_modules
  #         key: node_modules-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: node_modules-

  #     - name: Install packages with NPM
  #       run: |
  #         npm ci

  #     - name: Run tests
  #       run: |
  #         npm run test -- --colors

  Deploy:
    name: Deploy app to EC2 with Ansible playbook
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Create a pem file and SSH connection
        run: |
          mkdir .ssh && chmod 700 .ssh && cd .ssh
          touch secret.pem
          echo "${{ secrets.SSH_KEY }}" > secret.pem
          chmod 400 secret.pem
          ssh "secret.pem" ec2-user@ec2-3-84-57-167.compute-1.amazonaws.com 
        shell: bash
      - name: Code checkout
        uses: actions/checkout@v2.5.0
        with:
          token: ${{ secrets.WORKLOW_TOKEN }}
      - name: Encrypt vars file
        run: |
          cd 4IT572_DEVOPS/ && cd ansible/ && cd group_vars/
          echo "${{ secrets.PASSWORD }}" >> vault.yml
          ansible-vault encrypt vars.yml --vault-password-file vault.yml
          cd ../
      - name: Run ansible playbook
        run: |
          ansible-playbook ec2_deploy.yml --ask-vault-pass
        # uses: dawidd6/action-ansible-playbook@v2
        # with:
        #   playbook: ec2_deploy.yml
        #   directory: ./ansible
        #   key: ${{secrets.PEM_KEY}}

         